<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Suivi Évolution Physique</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        body { font-family: Arial, sans-serif; text-align: center; margin: 20px; }
        input, button { margin: 5px; padding: 8px; }
        table { width: 100%; border-collapse: collapse; margin-top: 20px; }
        th, td { border: 1px solid #ddd; padding: 10px; }
        th { background: #333; color: white; }
        canvas { max-width: 100%; margin-top: 20px; }
    </style>
</head>
<body>
    <h2>Suivi Évolution Physique</h2>
    
    <div id="initialSetup">
        <input type="date" id="dateNaissance" placeholder="Date de naissance">
        <input type="number" id="taille" placeholder="Taille (cm)">
        <button onclick="enregistrerInfos()">Enregistrer</button>
    </div>
    
    <div id="dataInput" style="display:none;">
        <input type="date" id="date">
        <input type="number" id="poids" placeholder="Poids (kg)">
        <input type="number" id="masseGrasse" placeholder="Masse grasse (%)">
        <input type="number" id="masseMusculaire" placeholder="Masse musculaire (%)">
        <input type="number" id="masseOs" placeholder="Masse osseuse (kg)">
        <input type="number" id="tbw" placeholder="TBW (%)">
        
        <select id="niveauActivite">
            <option value="1.2">Sédentaire (pas d'exercice)</option>
            <option value="1.375">Légèrement actif</option>
            <option value="1.55">Modérément actif</option>
            <option value="1.725">Très actif</option>
            <option value="1.9">Super actif</option>
        </select>
        
        <button onclick="ajouterDonnee()">Ajouter</button>
    </div>

    <button onclick="clearSiteData()">Clear Site Data</button>

    <h3>Évolution sur 30 jours</h3>
    <canvas id="graphique"></canvas>

    <table>
        <thead>
            <tr>
                <th>Date</th>
                <th>Poids</th>
                <th>Masse Grasse</th>
                <th>Masse Musculaire</th>
                <th>Masse Osseuse</th>
                <th>TBW</th>
                <th>IMC</th>
                <th>Ratio Muscles / Graisse</th>
                <th>MB</th>
                <th>Dépense Calorique (TDEE)</th>
                <th>Âge Métabolique</th>
                <th>Calories à Consommer</th>
            </tr>
        </thead>
        <tbody id="historique"></tbody>
    </table>

    <script>
        document.addEventListener("DOMContentLoaded", () => {
            document.getElementById("date").value = new Date().toISOString().split("T")[0];
            chargerDonnees();
            afficherFormulaire();
        });

        function enregistrerInfos() {
            const dateNaissance = document.getElementById("dateNaissance").value;
            const taille = parseInt(document.getElementById("taille").value);
            if (!dateNaissance || !taille) {
                return alert("Veuillez remplir tous les champs.");
            }
            localStorage.setItem("dateNaissance", dateNaissance);
            localStorage.setItem("taille", taille);
            document.getElementById("initialSetup").style.display = "none";
            document.getElementById("dataInput").style.display = "block";
        }

        // Calculer l'IMC
        function calculerIMC(poids, taille) {
            taille = taille / 100;  // Convertir taille en m
            return (poids / (taille * taille)).toFixed(2);
        }

        // Calculer la Dépense Calorique Journalière (TDEE)
        function calculerTDEE(MB, niveauActivite) {
            return MB * niveauActivite;
        }

        // Calculer le Métabolisme de Base (MB)
        function calculerMB(poids, taille, age) {
            return 10 * poids + 6.25 * taille - 5 * age + 5; // Formule de Mifflin-St Jeor (homme)
        }

        // Calculer l'Âge Métabolique
        function calculerAgeMetabolique(MB, age) {
            const MB_moyen = 1700; // Moyenne MB homme
            return Math.round((MB / MB_moyen) * age);
        }

        // Calculer le Ratio Muscles / Graisse
        function calculerRatioMuscleGraisse(masseMusculaire, masseGrasse) {
            return (masseMusculaire / masseGrasse).toFixed(2);
        }

        // Ajouter une entrée
        function ajouterDonnee() {
            const date = document.getElementById("date").value;
            const dateNaissance = localStorage.getItem("dateNaissance");
            const age = calculerAge(dateNaissance);
            const taille = parseInt(localStorage.getItem("taille"));
            const poids = parseFloat(document.getElementById("poids").value);
            const masseGrasse = parseFloat(document.getElementById("masseGrasse").value);
            const masseMusculaire = parseFloat(document.getElementById("masseMusculaire").value);
            const masseOs = parseFloat(document.getElementById("masseOs").value);
            const tbw = parseFloat(document.getElementById("tbw").value);
            const niveauActivite = parseFloat(document.getElementById("niveauActivite").value);

            if (!date || !poids || !masseGrasse || !masseMusculaire || !masseOs || !tbw) {
                return alert("Veuillez remplir tous les champs.");
            }

            const MB = calculerMB(poids, taille, age);
            const IMC = calculerIMC(poids, taille);
            const TDEE = calculerTDEE(MB, niveauActivite);
            const ratioMuscleGraisse = calculerRatioMuscleGraisse(masseMusculaire, masseGrasse);
            const ageMetabolique = calculerAgeMetabolique(MB, age);

            const caloriesConsommer = TDEE + 500;  // Pour prendre du muscle
            const caloriesSecher = TDEE - 500;  // Pour sécher

            const donnees = JSON.parse(localStorage.getItem("evolution")) || [];
            donnees.push({ date, poids, masseGrasse, masseMusculaire, masseOs, tbw, IMC, ratioMuscleGraisse, MB, TDEE, ageMetabolique, caloriesConsommer, caloriesSecher });
            localStorage.setItem("evolution", JSON.stringify(donnees));

            chargerDonnees();
        }

        // Calculer l'âge à partir de la date de naissance
        function calculerAge(dateNaissance) {
            const dateNaiss = new Date(dateNaissance);
            const aujourd'hui = new Date();
            const age = aujourd'hui.getFullYear() - dateNaiss.getFullYear();
            const mois = aujourd'hui.getMonth() - dateNaiss.getMonth();
            if (mois < 0 || (mois === 0 && aujourd'hui.getDate() < dateNaiss.getDate())) {
                age--;
            }
            return age;
        }

        // Charger les données depuis localStorage
        function chargerDonnees() {
            const donnees = JSON.parse(localStorage.getItem("evolution")) || [];
            const historique = document.getElementById("historique");
            historique.innerHTML = donnees.map(d => `
                <tr>
                    <td>${d.date}</td>
                    <td>${d.poids} kg</td>
                    <td>${d.masseGrasse} %</td>
                    <td>${d.masseMusculaire} %</td>
                    <td>${d.masseOs} kg</td>
                    <td>${d.tbw} %</td>
                    <td>${d.IMC}</td>
                    <td>${d.ratioMuscleGraisse}</td>
                    <td>${Math.round(d.MB)} kcal</td>
                    <td>${Math.round(d.TDEE)} kcal</td>
                    <td>${d.ageMetabolique} ans</td>
                    <td>Prendre : ${d.caloriesConsommer} kcal, Sécher : ${d.caloriesSecher} kcal</td>
                </tr>
            `).join("");

            afficherGraphique(donnees);
        }

        // Affichage du graphique
        function afficherGraphique(donnees) {
            const ctx = document.getElementById("graphique").getContext("2d");
            const labels = donnees.map(d => d.date);
            const poidsData = donnees.map(d => d.poids);
            const mbData = donnees.map(d => d.MB);

            if (window.myChart) window.myChart.destroy();

            window.myChart = new Chart(ctx, {
                type: "line",
                data: {
                    labels: labels,
                    datasets: [
                        {
                            label: "Poids (kg)",
                            data: poidsData,
                            borderColor: "blue",
                            fill: false
                        },
                        {
                            label: "Métabolisme de Base (kcal)",
                            data: mbData,
                            borderColor: "red",
                            fill: false
                        }
                    ]
                }
            });
        }

        // Clear site data
        function clearSiteData() {
            localStorage.clear();
            alert("Les données ont été réinitialisées.");
            window.location.reload();
        }

        // Afficher le formulaire si la date de naissance et la taille sont stockées
        function afficherFormulaire() {
            const dateNaissance = localStorage.getItem("dateNaissance");
            const taille = localStorage.getItem("taille");

            if (dateNaissance && taille) {
                document.getElementById("initialSetup").style.display = "none";
                document.getElementById("dataInput").style.display = "block";
            }
        }
    </script>
</body>
</html>
